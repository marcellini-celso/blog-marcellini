---
title: "üåê Navegue por Tags"
format: html
page-layout: full
---


<h4>Legenda de Cores e √çcones</h4>
<div id="tag-legend" style="display: flex; flex-wrap: wrap; gap: 0.5em; margin-bottom: 1em;"></div>

<div id="tag-cloud"></div>
<hr>
<div id="post-list"></div>

<script>
async function loadPosts() {
  const response = await fetch('posts.json');
  const posts = await response.json();

  const tagMap = {};
  posts.forEach(post => {
    post.tags.forEach(tag => {
      if (!tagMap[tag]) tagMap[tag] = [];
      tagMap[tag].push(post);
    });
  });

  const tagCloud = document.getElementById("tag-cloud");
  Object.keys(tagMap).sort().forEach(tag => {
    const btn = document.createElement("button");
    btn.textContent = `${getIcon(tag)} ${tag} (${tagMap[tag].length})`;
    btn.style.margin = "0.25em";
    btn.style.padding = "0.5em 0.75em";
    btn.style.border = "none";
    btn.style.borderRadius = "5px";
    btn.style.cursor = "pointer";
    btn.style.backgroundColor = getColor(tag);
    btn.style.color = "white";
    btn.onclick = () => showPosts(tagMap[tag], tag);
    tagCloud.appendChild(btn);
  });

  showPosts(posts); // Mostrar todos inicialmente
  renderLegend();   // Renderizar legenda
}

function showPosts(posts, tag) {
  const container = document.getElementById("post-list");
  container.innerHTML = tag ? `<h3>Posts com a tag: <em>${tag}</em></h3>` : "<h3>Todos os Posts</h3>";
  posts.forEach(post => {
    const item = document.createElement("p");
    item.innerHTML = `<a href='${post.href.replace(".qmd", ".html")}'>${post.title}</a>`;
    container.appendChild(item);
  });
}

function getColor(tag) {
  const palette = {
    matem√°tica: { color: "#007BFF", icon: "üìò" },
    f√≠sica: { color: "#dc3545", icon: "üî¨" },
    programa√ß√£o: { color: "#28a745", icon: "üíª" },
    estat√≠stica: { color: "#6f42c1", icon: "üìä" },
    R: { color: "#198754", icon: "üìó" },
    python: { color: "#ff8800", icon: "üêç" },
    blog: { color: "#17a2b8", icon: "üìù" },
    latex: { color: "#795548", icon: "üìÑ" },
    relatividade: { color: "#6610f2", icon: "üåå" },
    "espa√ßo-tempo": { color: "#343a40", icon: "‚è≥" },
    Hardy: { color: "#e83e8c", icon: "üé®" }
  };
  const entry = palette[tag.toLowerCase()];
  return entry ? entry.color : "#adb5bd"; // cor cinza padr√£o
}

function getIcon(tag) {
  const palette = {
    matem√°tica: { color: "#007BFF", icon: "üìò" },
    f√≠sica: { color: "#dc3545", icon: "üî¨" },
    programa√ß√£o: { color: "#28a745", icon: "üíª" },
    estat√≠stica: { color: "#6f42c1", icon: "üìä" },
    R: { color: "#198754", icon: "üìó" },
    python: { color: "#ff8800", icon: "üêç" },
    blog: { color: "#17a2b8", icon: "üìù" },
    latex: { color: "#795548", icon: "üìÑ" },
    relatividade: { color: "#6610f2", icon: "üåå" },
    "espa√ßo-tempo": { color: "#343a40", icon: "‚è≥" },
    Hardy: { color: "#e83e8c", icon: "üé®" }
  };
  const entry = palette[tag.toLowerCase()];
  return entry ? entry.icon : "üè∑Ô∏è";
}

function renderLegend() {
  const legend = document.getElementById("tag-legend");
  const keys = [
    "matem√°tica", "f√≠sica", "programa√ß√£o", "estat√≠stica",
    "R", "python", "blog", "latex", "relatividade", "espa√ßo-tempo", "Hardy"
  ];
  keys.forEach(tag => {
    const el = document.createElement("span");
    el.style.backgroundColor = getColor(tag);
    el.style.color = "white";
    el.style.padding = "4px 8px";
    el.style.borderRadius = "5px";
    el.innerText = `${getIcon(tag)} ${tag}`;
    legend.appendChild(el);
  });
}

loadPosts();
</script>

## üóÇÔ∏è Lista de Tags por Ordem Alfab√©tica

<!-- lista_tags:inicio -->
- `blog` (1 post)
- `Einstein` (2 posts)
- `espa√ßo-tempo` (3 posts)
- `est√©tica matem√°tica` (1 post)
- `Euclides` (1 post)
- `Euler` (1 post)
- `fatorial` (1 post)
- `Fermat` (1 post)
- `f√≠sica` (2 posts)
- `fun√ß√£o gama` (1 post)
- `Galileu` (1 post)
- `Hardy` (1 post)
- `latex` (2 posts)
- `Lorentz` (1 post)
- `markdown` (1 post)
- `matem√°tica` (2 posts)
- `Newton` (1 post)
- `programa√ß√£o` (2 posts)
- `python` (2 posts)
- `quadrivetores` (1 post)
- `quarto` (2 posts)
- `R` (2 posts)
- `relatividade` (3 posts)
- `s√©rie de Taylor` (1 post)
- `Wiles` (1 post)
<!-- lista_tags:fim -->

# ‚òÅÔ∏è Nuvem de Tags

<!-- nuvem_tags:inicio -->
![](nuvem_tags.png)
<!-- nuvem_tags:fim -->


